/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package guiTablas;

import complementos.ModeloTwitter;
import complementos.MySqlConnection;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author FERNANDO
 */
public class JPTableDataTwitter extends javax.swing.JPanel {

    /**
     * Creates new form JPTableDataTwitter
     */
    public JPTableDataTwitter() {
        initComponents();
    }
    
    public void startTable(){
        modeloTableTwitter = new DefaultTableModel();
        String columnas[] = {"tweet_id","created_at","tweet_text","screen_name","name","account_creation_date","url","expanded_url","display_url"};
        modeloTableTwitter.setColumnIdentifiers(columnas);     
        try {
            setDatosTabla(cargarDatosArreglo ());
        } catch (SQLException e) {
            System.out.println("Error SQLException JPTableOpcTwitter: "+e.getMessage());
        }
    }
    
    public String getValorConsulta() {
        return valorConsulta;
    }

    public void setValorConsulta(String valorConsulta) {
        this.valorConsulta = valorConsulta;
    }
    
    private ArrayList<ModeloTwitter> cargarDatosArreglo () throws SQLException{
        ArrayList<ModeloTwitter> arreglo = new ArrayList<ModeloTwitter>();
        String QUERRY = "SELECT * FROM registrotwitter WHERE registroConsultaTwitter_id = "+valorConsulta;
        Connection my_connection = null;
        Statement my_statement = null;
        ResultSet my_resultSet = null;
        
        try{
            my_connection = (new MySqlConnection()).conetMysql();
            my_statement = my_connection.createStatement();
            my_resultSet = my_statement.executeQuery(QUERRY);
            while(my_resultSet.next()){
                String tweet_id = my_resultSet.getString("tweet_id");
                String created_at = my_resultSet.getString("created_at");
                String tweet_text = my_resultSet.getString("tweet_text");
                String screen_name = my_resultSet.getString("screen_name");
                String name = my_resultSet.getString("name");
                String account_creation_date = my_resultSet.getString("account_creation_date");
                String url = my_resultSet.getString("url");
                String expanded_url = my_resultSet.getString("expanded_url");
                String display_url = my_resultSet.getString("display_url");
                String registrousuario_idUsuario = String.valueOf(my_resultSet.getInt("registroConsultaTwitter_id"));
                arreglo.add(new ModeloTwitter(tweet_id,created_at,tweet_text,screen_name,name,account_creation_date,url,expanded_url,display_url,registrousuario_idUsuario));
            }
            return arreglo;
        }catch(SQLException e){
            System.out.println("Error SQLException cargarDatosArreglo: "+e.getMessage());
        }finally{
            if(my_connection!=null)my_connection.close();
            if(my_statement!=null)my_statement.close();
        }
        return arreglo;
    }
    
    private void setDatosTabla (ArrayList<ModeloTwitter> datos){
        modeloTableTwitter.setRowCount(0);
        Object o[] = new Object[modeloTableTwitter.getColumnCount()];
        for(ModeloTwitter e:datos){
            o[0] = e.getTweet_id();
            o[1] = e.getCreated_at();
            o[2] = e.getTweet_text();
            o[3] = e.getScreen_name();
            o[4] = e.getName();
            o[5] = e.getAccount_creation_date();
            o[6] = e.getUrl();
            o[7] = e.getExpanded_url();
            o[8] = e.getDisplay_url();
            modeloTableTwitter.addRow(o);
        }
        jtDataTwitter.setModel(modeloTableTwitter);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jtDataTwitter = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 255, 255));
        setForeground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane1.setPreferredSize(new java.awt.Dimension(400, 230));

        jtDataTwitter.setBackground(new java.awt.Color(255, 255, 255));
        jtDataTwitter.setForeground(new java.awt.Color(58, 180, 180));
        jtDataTwitter.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jtDataTwitter.setGridColor(new java.awt.Color(51, 51, 51));
        jScrollPane1.setViewportView(jtDataTwitter);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jtDataTwitter;
    // End of variables declaration//GEN-END:variables
    private String valorConsulta;
    private DefaultTableModel modeloTableTwitter;
}
